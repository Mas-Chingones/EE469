$date
	Wed Apr 27 13:08:01 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module slt_testbench $end
$scope module slt_dut $end
$var wire 1 ! fast_calc $end
$var wire 1 " msb_same $end
$var wire 1 # slow $end
$var wire 30 $ valid_less_than [29:0] $end
$var wire 30 % sum_valid_less_than [29:0] $end
$var wire 30 & sum_less_eq [29:0] $end
$var wire 32 ' result [31:0] $end
$var wire 32 ( operand1 [31:0] $end
$var wire 32 ) operand0 [31:0] $end
$var wire 32 * neg_op1 [31:0] $end
$var wire 32 + neg_op0 [31:0] $end
$var wire 31 , digit_lesser [30:0] $end
$var wire 31 - digit_less_eq [30:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
bx ,
bx +
bx *
bx )
bx (
b0x '
bx &
bx %
bx $
x#
x"
x!
$end
#5
b0 '
0#
b0 %
b111111111111111111111111111111 &
b0 $
b1111111111111111111111111111111 -
b0 ,
b11111111111111111111111111111111 *
1"
0!
b11111111111111111111111111111111 +
b0 (
b0 )
#10
b0 %
b0 &
b0 $
b1110 -
b1 '
b10 ,
b11111111111111111111111111111101 *
0"
1!
b1110 +
b10 (
b11111111111111111111111111110001 )
#15
1#
b11 %
b10 $
b1 '
b111111111111111111111111111111 &
0!
1"
b1111111111111111111111111111111 -
b1100 *
b11111111111111111111111111110011 (
#20
b1 '
1#
b111111111111111111111111111111 %
b0 $
b111111111111111111111111100000 &
b1000000000000000000000000000000 ,
b1111111111111111111111111101111 -
b10111111111111111111111110111111 *
b11111111111111111111111110101111 +
b1000000000000000000000001000000 (
b1010000 )
#25
b11111111111111111111111111111 %
b111110000000000000000000000000 &
b10010000000000000000000000000 $
b1111110011111111011101111111111 -
b10010001100001001000100000001 ,
b10101001110011110110110010001010 *
b10111010011111111011100110001011 +
b1010110001100001001001101110101 (
b1000101100000000100011001110100 )
#30
b1 %
b111111111111111111111111111111 &
b1 $
b1111111111111111111111111111111 -
b1 ,
b10110000000000000000000011111010 *
b10110000000000000000000011111011 +
b1001111111111111111111100000101 (
b1001111111111111111111100000100 )
#35
b0 '
0#
b0 %
b0 $
b111111111111111111111111000000 &
b1000 ,
b1111111111111111111111111001011 -
b11111111111111111111111110110110 *
b11111111111111111111111110001010 +
b1001001 (
b1110101 )
#40
b111111111111111111111111111000 &
b0 '
b10 ,
b1111111111111111111111111111011 -
b1111111111111111111111111111101 *
0!
b1111111111111111111111111111011 +
b10000000000000000000000000000010 (
b10000000000000000000000000000100 )
#45
b0 %
b0 $
b111111111111111111111111000000 &
b1 ,
b1111111111111111111111111001111 -
b1111111111111111111111111111010 *
0"
b11111111111111111111111111001011 +
b10000000000000000000000000000101 (
b110100 )
#50
b0 '
0#
b0 %
b0 $
b0 &
1"
b10 ,
b111111111111111111111111111110 -
b11111111111111111111111111111101 *
b10111111111111111111111111111110 +
b10 (
b1000000000000000000000000000001 )
#55
b111111111111111111111111111000 &
b1111111111111111111111111111011 -
b0 '
b1111111111111111111111111111101 *
0!
b1111111111111111111111111111011 +
b10000000000000000000000000000010 (
b10000000000000000000000000000100 )
#60
b0 '
0#
b111111111111111111111111111110 &
b0 $
b0 %
b1111111111111111111111111111110 -
b0 ,
b10110000000000000000000011011001 *
b10110000000000000000000011011000 +
b1001111111111111111111100100110 (
b1001111111111111111111100100111 )
#65
b111111111111111111111111111111 %
b111111111111111111111111110000 &
b111111111111111111111111110000 $
0"
b1111111111111111111111111110001 -
b1111111111111111111111111110000 ,
b1110 *
b11111111111111111111111111110000 +
b11111111111111111111111111110001 (
b1111 )
#70
