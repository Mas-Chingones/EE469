$date
	Tue Apr 26 22:25:59 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module AND_32_testbench $end
$scope module data $end
$var wire 32 ! a [31:0] $end
$var wire 32 " b [31:0] $end
$var wire 1 # carryOut $end
$var wire 1 $ negative $end
$var wire 1 % overflow $end
$var wire 32 & sum [31:0] $end
$var wire 1 ' zero $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0'
bx &
0%
0$
0#
bx "
bx !
$end
#30
b0 &
b0 "
b0 !
#60
b1011 &
b11011 "
b1001111 !
#90
b101000000000000000000000000 &
b100101000000000000000000000000 "
b11010101000000000000000000000000 !
#110
b101110101011101010111010101 &
b100101110101011101010111010101 "
b11010101110101011101010111010101 !
